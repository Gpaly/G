package saurabhc3;
public class HeapSortwihoutHeapify {
    public static void heapSort(int[] arr) {
        int n = arr.length;

        // Build the max heap
        for (int i = n / 2 - 1; i >= 0; i--) {
            int current = i;
            while (current < n) {
                int largest = current;
                int left = 2 * current + 1;
                int right = 2 * current + 2;

                if (left < n && arr[left] > arr[largest])
                    largest = left;

                if (right < n && arr[right] > arr[largest])
                    largest = right;

                if (largest != current) {
                    int temp = arr[current];
                    arr[current] = arr[largest];
                    arr[largest] = temp;
                    current = largest;
                } else {
                    break;
                }
            }
        }

        // Extract elements from the heap one by one
        for (int i = n - 1; i > 0; i--) {
            // Move current root to the end
            int temp = arr[0];
            arr[0] = arr[i];
            arr[i] = temp;

            // Rebuild the heap for the reduced array
            int current = 0;
            while (current < i) {
                int largest = current;
                int left = 2 * current + 1;
                int right = 2 * current + 2;

                if (left < i && arr[left] > arr[largest])
                    largest = left;

                if (right < i && arr[right] > arr[largest])
                    largest = right;

                if (largest != current) {
                    int temp2 = arr[current];
                    arr[current] = arr[largest];
                    arr[largest] = temp2;
                    current = largest;
                } else {
                    break;
                }
            }
        }
    }

    public static void main(String[] args) {
        int[] arr = {12, 11, 13, 5, 6, 7};
        heapSort(arr);
        for (int num : arr) System.out.print(num + " ");
    }
}
public class HeapSortwithoutHeapify {
    public static void heapSort(int[] arr) {
        int n = arr.length;

        // Build the max heap
        for (int i = n / 2 - 1; i >= 0; i--) {
            int current = i;
            while (current < n) {
                int largest = current;
                int left = 2 * current + 1;
                int right = 2 * current + 2;

                if (left < n && arr[left] > arr[largest])
                    largest = left;

                if (right < n && arr[right] > arr[largest])
                    largest = right;

                if (largest != current) {
                    int temp = arr[current];
                    arr[current] = arr[largest];
                    arr[largest] = temp;
                    current = largest;
                } else {
                    break;
                }
            }
        }

        // Extract elements from the heap one by one
        for (int i = n - 1; i > 0; i--) {
            // Move current root to the end
            int temp = arr[0];
            arr[0] = arr[i];
            arr[i] = temp;

            // Rebuild the heap for the reduced array
            int current = 0;
            while (current < i) {
                int largest = current;
                int left = 2 * current + 1;
                int right = 2 * current + 2;

                if (left < i && arr[left] > arr[largest])
                    largest = left;

                if (right < i && arr[right] > arr[largest])
                    largest = right;

                if (largest != current) {
                    int temp2 = arr[current];
                    arr[current] = arr[largest];
                    arr[largest] = temp2;
                    current = largest;
                } else {
                    break;
                }
            }
        }
    }

    public static void main(String[] args) {
        int[] arr = {12, 11, 13, 5, 6, 7};
        heapSort(arr);
        for (int num : arr) System.out.print(num + " ");
    }
}
